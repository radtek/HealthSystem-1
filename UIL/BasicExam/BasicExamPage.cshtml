@{
    Layout = "~/_SiteLayout.cshtml";
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/bootstrap-table.js"></script>
<!-- put your locale files after bootstrap-table.js -->
<script src="~/Scripts/bootstrap-table-zh-CN.js"></script>


@*<link rel="stylesheet" href="~/Content/bootstrap.min.css">*@
<link rel="stylesheet" href="~/Content/bootstrap-table.css">

<link rel="stylesheet" href="~/Content/jquery-ui.min.css" />
<link rel="stylesheet" href="~/Content/jquery-ui.theme.min.css" />
<link rel="stylesheet" href="~/Content/jquery-ui-timepicker-addon.min.css" />
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>

<script src="~/Scripts/echarts-all-3.0.0.js"></script>

<div class="main-content-inner">
    <div class="breadcrumbs" id="breadcrumbs">
        <script type="text/javascript">try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }</script>

        <ul class="breadcrumb">
            <li>
                <i class="ace-icon fa fa-home home-icon"></i>
                <a href="#">主页</a>
            </li>
            <li class="active">基础体检信息</li>
        </ul>
        <!-- /.breadcrumb -->
        <!-- 	<div class="nav-search" id="nav-search">
                <form class="form-search">
                    <span class="input-icon">
                        <input type="text" placeholder="Search ..." class="nav-search-input" id="nav-search-input" autocomplete="off" /> <i class="ace-icon fa fa-search nav-search-icon"></i>
                    </span>
                </form>
            </div> -->
        <!-- /.nav-search -->
    </div>

    <div class="page-content">
        <div class="ace-settings-container" id="ace-settings-container">
            <div class="btn btn-app btn-xs btn-warning ace-settings-btn" id="ace-settings-btn">
                <i class="ace-icon fa fa-cog bigger-130"></i>
            </div>
            <div class="ace-settings-box clearfix" id="ace-settings-box">
                <div class="pull-left width-50">
                    <div class="ace-settings-item">
                        <div class="pull-left">
                            <select id="skin-colorpicker" class="hide">
                                <option data-skin="no-skin" value="#438EB9">#438EB9</option>
                                <option data-skin="skin-1" value="#222A2D">#222A2D</option>
                                <option data-skin="skin-2" value="#C6487E">#C6487E</option>
                                <option data-skin="skin-3" value="#D0D0D0">#D0D0D0</option>
                            </select>
                        </div>
                        <span>&nbsp; Choose Skin</span>
                    </div>
                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-navbar" />
                        <label class="lbl" for="ace-settings-navbar">Fixed Navbar</label>
                    </div>
                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-sidebar" />
                        <label class="lbl" for="ace-settings-sidebar">Fixed Sidebar</label>
                    </div>
                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-breadcrumbs" />
                        <label class="lbl" for="ace-settings-breadcrumbs">Fixed Breadcrumbs</label>
                    </div>
                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-rtl" />
                        <label class="lbl" for="ace-settings-rtl">Right To Left (rtl)</label>
                    </div>
                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-add-container" />
                        <label class="lbl" for="ace-settings-add-container">
                            Inside <b>.container</b>
                        </label>
                    </div>
                </div>
                <!-- /.pull-left -->
                <div class="pull-left width-50">
                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-hover" />
                        <label class="lbl" for="ace-settings-hover">Submenu on Hover</label>
                    </div>
                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-compact" />
                        <label class="lbl" for="ace-settings-compact">Compact Sidebar</label>
                    </div>
                    <div class="ace-settings-item">
                        <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-highlight" />
                        <label class="lbl" for="ace-settings-highlight">Alt. Active Item</label>
                    </div>
                </div>
                <!-- /.pull-left -->
            </div>
            <!-- /.ace-settings-box -->
        </div>

        <!-- /.ace-settings-container -->

        <div class="page-header">
            <h1>
                基础体检信息
                <small>
                    <i class="ace-icon fa fa-angle-double-right"></i>
                    overview &amp; stats
                </small>
            </h1>
        </div>
        <!-- /.page-header -->

        <div class="row">
            <div class="col-md-12">
                <!-- PAGE CONTENT BEGINS -->
                <!-- PAGE CONTENT ENDS -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->

        <div class="row">
            <div class="col-md-12">
                <div id="toolbar">
                    <form class="form-horizontal">
                        <div class="form-group" style="padding-left:15px;">
                            <input type="text" name="range_example_1_start" id="range_example_1_start" class="time" value="" />
                            <input type="text" name="range_example_1_end" id="range_example_1_end" class="time" value="" />
                        </div>
                    </form>
                </div>
                <table id="BasicExamTable"></table>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="page-header"></div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <form class="form-horizontal">
                    <div class="form-group">
                        <label for="" class="label_front_weight" style="padding-left:15px;">User Name:</label>
                        <label for="" class="label_front_weight" id="toShowName"></label>
                    </div>
                    <div class="form-group">
                        <label for="" class="label_front_weight" style="padding-left:15px;">Time:</label>
                        <label for="" class="label_front_weight" id="toShowTime"></label>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            @*<div class="col-md-12" style="width: 100%; height: 450px; margin: 0">*@
                <div class="col-md-8" style="height: 450px; margin: 0">
                    <div id="heightweightContainer" style="width: 100%; height: 100%"></div>
                </div>
                <div class="col-md-4" style="height: 450px; margin: 0">
                    <div id="bmiContainer" style="width: 100%; height: 100%"></div>
                </div>
            @*</div>*@
            
        </div>
        <div class="row">
            <div class="col-md-12" style="width: 100%; height: 450px; margin: 0">
                <div id="heartContainer" style="width: 100%; height: 100%"></div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12" style="width: 100%; height: 450px; margin: 0">
                <div id="bloodContainer" style="width: 100%; height: 100%"></div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12" style="width: 100%; height: 450px; margin: 0">
                <div id="respirationContainer" style="width: 100%; height: 100%"></div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12" style="width: 100%; height: 450px; margin: 0">
                <div id="temperatureContainer" style="width: 100%; height: 100%"></div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12" style="width: 100%; height: 450px; margin: 0">
                <div id="sportContainer" style="width: 100%; height: 100%"></div>
            </div>
        </div>
    </div>
    <!-- /.page-content -->
</div>

<script>
    $(function () {

        ////for timepicker
        var startDateTextBox = $('#range_example_1_start')
        var endDateTextBox = $('#range_example_1_end')
        var startTime = '',endTime = '',dataUser = ''

        startDateTextBox.datetimepicker({
            timeFormat: 'HH:mm:ss',
            // timeFormat: 'HH:mm z',
            onClose: function(dateText, inst) {
                if (endDateTextBox.val() != '') {
                    var testStartDate = startDateTextBox.datetimepicker('getDate')
                    var testEndDate = endDateTextBox.datetimepicker('getDate')
                    if (testStartDate > testEndDate)
                        endDateTextBox.datetimepicker('setDate', testStartDate)
                } else {
                    endDateTextBox.val(dateText)
                }

                if(startDateTextBox.val() != ''){
                    startTime = startDateTextBox.datetimepicker('getDate').getTime().toString().substr(0, 10)
                }
                console.log('startTime:' + startTime)
            },
            onSelect: function(selectedDateTime) {
                endDateTextBox.datetimepicker('option', 'minDate', startDateTextBox.datetimepicker('getDate'))
            }
        })

        endDateTextBox.datetimepicker({
            // timeFormat: 'HH:mm z',
            timeFormat: 'HH:mm:ss',//必须HH,不能hh,否则时间不能从0开始
            onClose: function(dateText, inst) {
                if (startDateTextBox.val() != '') {
                    var testStartDate = startDateTextBox.datetimepicker('getDate')
                    var testEndDate = endDateTextBox.datetimepicker('getDate')
                    if (testStartDate > testEndDate)
                        startDateTextBox.datetimepicker('setDate', testEndDate)
                } else {
                    startDateTextBox.val(dateText)
                }

                if(endDateTextBox.val() != ''){
                    endTime = endDateTextBox.datetimepicker('getDate').getTime().toString().substr(0, 10)
                }

                console.log('endTime:' + endTime)
            },
            onSelect: function(selectedDateTime) {
                startDateTextBox.datetimepicker('option', 'maxDate', endDateTextBox.datetimepicker('getDate'))
            }
        })

        //这个必须放在bootstrapTable设置之上
        window.operateEvents = {
            'click .like': function (e, value, row, index) {
                // alert('You click like action, row: ' + JSON.stringify(row))
                $("#toShowName").text(row.TheName)
                dataUser = row.TheName
                if(startDateTextBox.val()!='' && endDateTextBox.val()!=''){
                    $("#toShowTime").text(startDateTextBox.val()+'   '+'To'+'   '+endDateTextBox.val())
                }else{
                    $("#toShowTime").text('All')
                }
                dataAjax()//调用数据绘图
                console.log('row+startTime+endTime')
                console.log(row.user)
                console.log(startTime)
                console.log(endTime)
            }
            // 'click .remove': function (e, value, row, index) {
            //     $table.bootstrapTable('remove', {
            //         field: 'id',
            //         values: [row.id]
            //     })
            // }
        }

        //for usrtable
        $('#BasicExamTable').bootstrapTable({
            url: 'BasicExamTable.cshtml',
            pagination: true,
            pageSize: 4,
            sidePagination: 'server',
            pageList: [5, 10, 'ALL'],
            search: true,
            mobileResponsive: true,
            toolbar:'#toolbar',
            queryParamsType: "limit",//查询参数组织方式
            queryParams: function getParams(params) {
                // params['gugu'] = testgugu
                console.log(params)
                return params;
            },
            striped: true,
            // rowStyle: rowStyle,
            // showColumns: true,
            showRefresh: true,
            // showToggle: true,
            showPaginationSwitch: true,
            clickToSelect: true,
            columns: [{
                field: 'Id',
                title: '编号',
                visible: false,//不可见，工具栏可见
                switchable: false,//都不见
                align: 'center'
            }, {
                field: 'ResidentId',
                title: '居民号',
                align: 'center'
            }, {
                field: 'TheName',
                title: '姓名',
                editable: true,
                align: 'center'
            }, {
                field: 'CheckID',
                title: '体检编号',
                editable: true,
                align: 'center'
            }, {
                field: 'CheckDate',
                title: '体检日期',
                editable: true,
                align: 'center'
            }, {
                field: 'Doctor',
                title: '体检医生',
                editable: true,
                align: 'center'
            }, {
                field: 'SymptomsId',
                title: '症状',
                editable: true,
                align: 'center'
            }, {
                field: 'Temperature',
                title: '体温',
                editable: true,
                align: 'center'
            }, {
                field: 'BPM',
                title: '脉率',
                editable: true,
                align: 'center'
            }, {
                field: 'RR',
                title: '呼吸频率',
                editable: true,
                align: 'center'
            }, {
                field: 'BP',
                title: '血压',
                editable: true,
                align: 'center'
            }, {
                field: 'Height',
                title: '身高',
                editable: true,
                align: 'center'
            }, {
                field: 'Weight',
                title: '体重',
                editable: true,
                align: 'center'
            }, {
                field: 'Waist',
                title: '腰围',
                editable: true,
                align: 'center'
            }, {
                field: 'BMI',
                title: '体质指数',
                editable: true,
                align: 'center'
            }, {
                field: 'PhysicalExercise',
                title: '体育锻炼',
                editable: true,
                align: 'center'
            }, {
                field: 'EatingHabitsId',
                title: '饮食习惯',
                editable: true,
                align: 'center'
            }, {
                field: 'Smoking',
                title: '吸烟情况',
                editable: true,
                align: 'center'
            }, {
                field: 'Drinking',
                title: '饮酒情况',
                editable: true,
                align: 'center'
            }, {
                field: 'OccupationalExposure',
                title: '职业暴露情况',
                editable: true,
                align: 'center'
            }, {
                field: 'Data Plotting',
                title: '数据展示',
                align: 'center',
                events: operateEvents,
                formatter: operateFormatter
            }],
        })


            function operateFormatter(value, row, index) {
                return ['<button type="button" class="btn btn-default like">','Plotting</button>',
                    // '<a class="like" href="javascript:void(0)" title="Data Plotting">',
                    // '<span class="glyphicon glyphicon-picture"></span>',
                    // '</a>'
                ].join('');
            }

        //    //绘图数据js代码开始
            var heartChart = echarts.init(document.getElementById('heartContainer'))
            var bloodChart = echarts.init(document.getElementById('bloodContainer'))
            var respirationChart = echarts.init(document.getElementById('respirationContainer'))
            var temperatureChart = echarts.init(document.getElementById('temperatureContainer'))
            var heightweightChart = echarts.init(document.getElementById('heightweightContainer'))
            var bmiChart=echarts.init(document.getElementById('bmiContainer'))
        //    // 指定图表的配置项和数据
            var heartOption = {
                title: {
                    text: '脉率数据(BPM)采集图'
                },
                tooltip: {
                    trigger: 'axis'
                },
                legend: {
                    data: ['脉率']
                },
                toolbox: {
                    feature: {
                        saveAsImage: {}
                    }
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: [{
                    type: 'category',
                    boundaryGap: false,
                    name:'日期',
                    data: []
                }],
                yAxis: [{
                    type: 'value',
                    max: 180,
                    min: 0,
                    name: '脉率',
                    splitNumber: 10
                }],
                series: [

                    {
                        name: '脉率',
                        type: 'line',
                        smooth: true,
                        stack: '总量',
                        label: {
                            normal: {
                                show: true,
                                position: 'top'
                            }
                        },
                        areaStyle: {
                            normal: {}
                        },
                        data: [0],//必须要这个，至少一个值，否则ajax拿到数据后也不能绘图
                    }
                ]
            }
            var bloodOption = {
                title: {
                    text: '血压数据(BP)采集图'
                },
                tooltip: {
                    trigger: 'axis'
                },
                legend: {
                    data: ['平均血压']
                },
                toolbox: {
                    feature: {
                        saveAsImage: {}
                    }
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: [{
                    type: 'category',
                    boundaryGap: false,
                    name:'日期',
                    data: []
                }],
                yAxis: [{
                    type: 'value',
                     max: 200,
                     min: 0,
                     name: '血压',
                     splitNumber: 10
                }],
                series: [
                    {
                        name: '平均血压',
                        type: 'line',
                        smooth: true,
                        stack: '总量',
                        areaStyle: {
                            normal: {}
                        },
                        label: {
                            normal: {
                                show: true,
                                position: 'top'
                            }
                        },
                        itemStyle: {
                            normal: {
                                color: '#8BD8B3',
                            }
                        },
                        data: [0],//必须要这个，至少一个值，否则ajax拿到数据后也不能绘图
                    },
                ]
            }
            var respirationOption = {
                title: {
                    text: '呼吸率(RR)采集图'
                },
                tooltip: {
                    trigger: 'axis'
                },
                legend: {
                    data: ['呼吸率']
                },
                toolbox: {
                    feature: {
                        saveAsImage: {}
                    }
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: [{
                    type: 'category',
                    boundaryGap: false,
                    name: '日期',
                    data: []
                }],
                yAxis: [{
                    type: 'value',
                     max: 160,
                     min: 0,
                     name:'呼吸率',
                     splitNumber: 10
                }],
                series: [
                    {
                        name: '呼吸率',
                        type: 'line',
                        smooth: true,
                        stack: '总量',
                        areaStyle: {
                            normal: {}
                        },
                        label: {
                            normal: {
                                show: true,
                                position: 'top'
                            }
                        },
                        itemStyle: {
                            normal: {
                                color: '#3300FF',
                            }
                        },
                        data: [0],//必须要这个，至少一个值，否则ajax拿到数据后也不能绘图
                    },
                ]
            }
            var temperatureOption = {
                title: {
                    text: '体温数据采集图'
                },
                tooltip: {
                    trigger: 'axis'
                },
                legend: {
                    data: ['体温']
                },
                toolbox: {
                    feature: {
                        saveAsImage: {}
                    }
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: [{
                    type: 'category',
                    boundaryGap: false,
                    name: '日期',
                    data: []
                }],
                yAxis: [{
                    type: 'value',
                    max: 47,
                    min: 0,
                    name: '体温',
                    splitNumber: 10
                }],
                series: [
                    {
                        name: '体温',
                        type: 'line',
                        smooth: true,
                        stack: '总量',
                        areaStyle: {
                            normal: {}
                        },
                        label: {
                            normal: {
                                show: true,
                                position: 'top'
                            }
                        },
                        itemStyle: {
                            normal: {
                                color: '#66000F',
                            }
                        },
                        data: [0],//必须要这个，至少一个值，否则ajax拿到数据后也不能绘图
                    },
                ]
            }
            var heightweightOption = {
                title:{
                    text:'身高体重图'
                },
                tooltip: {
                    trigger: 'axis'
                },
                toolbox: {
                    feature: {
                        dataView: { show: true, readOnly: false },
                        magicType: { show: true, type: ['line', 'bar'] },
                        restore: { show: true },
                        saveAsImage: { show: true }
                    }
                },
                legend: {
                    data: ['身高', '体重']
                },
                xAxis: [
                    {
                        type: 'category',
                        data: []
                    }
                ],
                yAxis: [
                    {
                        type: 'value',
                        name: '身高',
                        min: 0,
                        max: 250,
                        interval: 50,
                        axisLabel: {
                            formatter: '{value} cm'
                        }
                    },
                    {
                        type: 'value',
                        name: '体重',
                        min: 0,
                        max: 150,
                        interval: 5,
                        axisLabel: {
                            formatter: '{value} kg'
                        }
                    }
                ],
                series: [
                    {
                        name: '身高',
                        type: 'bar',
                        data: [0]
                    },
                    {
                        name: '体重',
                        type: 'bar',
                        data: [0]
                    },
                ]
            };
            var bmiOption = {
                tooltip: {
                    formatter: "{a} <br/>{b} : {c}%"
                },
                toolbox: {
                    feature: {
                        restore: {},
                        saveAsImage: {}
                    }
                },
                series: [
                    {
                        max: 50,
                        name: 'BMI',
                        type: 'gauge',
                        axisLine: { // 坐标轴线  
                            lineStyle: { // 属性lineStyle控制线条样式  
                                color: [[0.37, '#48b'],
                                        [0.5, '#228b22'], [0.56, '#ffa500'],
                                        [1, '#cc0000']
                                ],
                                width: 30
                            }
                        },
                        detail: { formatter: '{value}' },
                        data: [0]
                    }
                ]
            };
        //    var sleepStateOption = {
        //        title: {
        //            text: '睡眠状态图',
        //            subtext: '',
        //            x: 'center'
        //        },
        //        tooltip: {
        //            trigger: 'item',
        //            formatter: "{a} <br/>{b} : {c} ({d}%)"
        //        },
        //        legend: {
        //            orient: 'vertical',
        //            left: 'left',
        //            data: ['深睡', '浅睡', '醒着']
        //        },
        //        series: [{
        //            name: '睡眠状态',
        //            type: 'pie',
        //            radius: '55%',
        //            center: ['50%', '60%'],
        //            data: [],
        //            itemStyle: {
        //                emphasis: {
        //                    shadowBlur: 10,
        //                    shadowOffsetX: 0,
        //                    shadowColor: 'rgba(0, 0, 0, 0.5)'
        //                }
        //            }
        //        }]
        //    }

        //    var sportOption = {
        //        title: {
        //            text: '运动状态图',
        //            subtext: '',
        //            x: 'center'
        //        },
        //        tooltip: {
        //            trigger: 'item',
        //            formatter: "{a} <br/>{b}: {c} ({d}%)"
        //        },
        //        legend: {
        //            orient: 'vertical',
        //            x: 'left',
        //            data:['静止', '休息', '走路', '跑步']
        //        },
        //        series: [
        //            {
        //                name:'运动状态',
        //                type:'pie',
        //                radius: ['50%', '70%'],
        //                avoidLabelOverlap: false,
        //                label: {
        //                    normal: {
        //                        show: false,
        //                        position: 'center'
        //                    },
        //                    emphasis: {
        //                        show: true,
        //                        textStyle: {
        //                            fontSize: '30',
        //                            fontWeight: 'bold'
        //                        }
        //                    }
        //                },
        //                labelLine: {
        //                    normal: {
        //                        show: false
        //                    }
        //                },
        //                data:[
        //                    // {value:335, name:'静止'},
        //                    // {value:310, name:'休息'},
        //                    // {value:234, name:'走路'},
        //                    // {value:135, name:'跑步'}
        //                ]
        //            }
        //        ]


        //        // title: {
        //        //     text: '运动状态图',
        //        //     subtext: '',
        //        //     x: 'center'
        //        // },
        //        // tooltip: {
        //        //     trigger: 'item',
        //        //     formatter: "{a} <br/>{b} : {c} ({d}%)"
        //        // },
        //        // legend: {
        //        //     orient: 'vertical',
        //        //     left: 'left',
        //        //     data: ['静止', '休息', '走路', '跑步']
        //        // },
        //        // series: [{
        //        //     name: '运动状态',
        //        //     type: 'pie',
        //        //     radius: '55%',
        //        //     center: ['50%', '70%'],
        //        //     avoidLabelOverlap: false,
        //        //     label: {
        //        //         normal: {
        //        //             show: false,
        //        //             position: 'center'
        //        //         },
        //        //         emphasis: {
        //        //             show: true,
        //        //             textStyle: {
        //        //                 fontSize: '30',
        //        //                 fontWeight: 'bold'
        //        //             }
        //        //         }
        //        //     },
        //        //     labelLine: {
        //        //         normal: {
        //        //             show: false
        //        //         }
        //        //     },
        //        //     data: [],
        //        // }]
        //    }
        //    // 使用刚指定的配置项和数据显示图表。
            heartChart.setOption(heartOption)
            bloodChart.setOption(bloodOption)
            respirationChart.setOption(respirationOption)
            temperatureChart.setOption(temperatureOption)
            heightweightChart.setOption(heightweightOption)
            bmiChart.setOption(bmiOption)
            function dataAjax() {
                $.ajax({
                    url: 'BasicExamData.cshtml',
                    type: 'get',
                    data:'startTime=' + startTime + '&endTime=' + endTime + '&dataUser=' + dataUser,
                    dataType: 'json'
                }).done(function(data, status, jqXHR) {
                    // 填入数据
                    console.log(data)
                    // console.log(data[0].diastolic_pressure)
                    //心跳数据填入
                    heartChart.setOption({
                        series: [{
                            data:data.heart,
                        }]
                    })
                    //血压数据填入
                    bloodChart.setOption({
                        series: [{
                            data:data.blood,
                        }]
                    })
                    //呼吸率数据填入
                    respirationChart.setOption({
                        series: [{
                            data: data.respiration,
                        }]
                    })
                    temperatureChart.setOption({
                        series: [{
                            data: data.temperature,
                        }]
                    })
                    heightweightChart.setOption({
                        series: [{
                            data: data.height,
                        }, {
                            data: data.weight,
                        }]
                    })
                    bmiChart.setOption({
                        series: [{
                            data: [{
                                value: data.bmi,
                                name: "BMI"
                            }],
                        }]
                    })
        //            //睡眠状态
        //            sleepStateChart.setOption({
        //                series: [{
        //                    // data: data.data
        //                    data: [{
        //                        value: data.sleep.sleep_state.deepSleep,
        //                        name: '深睡'
        //                    }, {
        //                        value: data.sleep.sleep_state.lightSleep,
        //                        name: '浅睡'
        //                    }, {
        //                        value: data.sleep.sleep_state.awake,
        //                        name: '醒着'
        //                    }],
        //                }]
        //            })
        //            //翻身次数
        //            turnOverTimesChart.setOption({
        //                series: [{
        //                    data:data.sleep.turn_over_times,
        //                }]
        //            })
        //            //运动状态
        //            sportChart.setOption({
        //                series: [{
        //                    // data: data.data
        //                    data: [{
        //                        value: data.sport.sport_state.static,
        //                        name: '静止'
        //                    }, {
        //                        value: data.sport.sport_state.rest,
        //                        name: '休息'
        //                    }, {
        //                        value: data.sport.sport_state.walk,
        //                        name: '走路'
        //                    },{
        //                        value: data.sport.sport_state.run,
        //                        name: '跑步'
        //                    }],
        //                }]
        //            })
        //        }).fail(function(){
        //            console.log('获取数据失败')
                })
            }

        //    //心跳数据js代码结束
    })


</script>
